// Problem : Grid Unique Paths
// Link : https://www.interviewbit.com/problems/grid-unique-paths/

//Combinatorics Solution
int Solution::uniquePaths(int m, int n) {
    if(m<n){
        int temp = m;
        m = n;
        n = temp;
    }
    long long int ans = 1;
    for(int i=m;i<=(m+n-2);i++) ans*=i;
    for(int i=n-1;i>0;i--) ans/=i;
    return (int)ans;
}

//DP Solution
int Solution::uniquePaths(int m, int n) {
    int dp[m][n];
    
    for(int i=0;i<m;i++) dp[i][0]=1;
    
    for(int j=0;j<n;j++) dp[0][j]=1;
    
    for(int i=1;i<m;i++){
        for(int j=1;j<n;j++) 
        
            dp[i][j]=dp[i-1][j] + dp[i][j-1];
    }
    return dp[m-1][n-1];
}

//Recursive Solution
int Solution::uniquePaths(int A, int B) {
    if(A==1 || B==1) return 1;
    return uniquePaths(A-1,B)+uniquePaths(A,B-1);
}
